--- a/src/boot.c
+++ b/src/boot.c
@@ -679,20 +679,21 @@ boot_fail(void)
     if (BootRetryTime == (u32)-1)
         printf("No bootable device.\n");
     else
-        printf("No bootable device.  Retrying in %d seconds.\n"
+        printf("No bootable device.  Halting in %d seconds.\n"
                , BootRetryTime/1000);
-    // Wait for 'BootRetryTime' milliseconds and then reboot.
+    // Wait for 'BootRetryTime' milliseconds and then halt.
     u32 end = irqtimer_calc(BootRetryTime);
     for (;;) {
-        if (BootRetryTime != (u32)-1 && irqtimer_check(end))
+        if (irqtimer_check(end))
             break;
         yield_toirq();
     }
-    printf("Rebooting.\n");
-    struct bregs br;
-    memset(&br, 0, sizeof(br));
-    br.code = SEGOFF(SEG_BIOS, (u32)reset_vector);
-    farcall16big(&br);
+    /* Halt cpu */
+    printf("Halt.\n");
+    irq_disable();
+    for (;;) {
+        hlt();
+    }
 }
 
 // Determine next boot method and attempt a boot using it.
